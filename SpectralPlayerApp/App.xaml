<Application x:Class="SpectralPlayerApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SpectralPlayerApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="Dark_BackgroundColor">#252525</Color>
        <Color x:Key="Dark_SubBackgroundColor">#595959</Color>
        <Color x:Key="Dark_SubSubBackgroundColor">#797979</Color>
        <Color x:Key="Dark_FontColor">#D9D9D9</Color>
        <Color x:Key="Dark_HighlightColor">#8C8C8C</Color>
        <Color x:Key="Dark_BrightHighlightColor">#F2F2F2</Color>

        <SolidColorBrush x:Key="Dark_BackGroundBrush" Color="{StaticResource Dark_BackgroundColor}"/>
        <SolidColorBrush x:Key="Dark_SubBackgroundBrush" Color="{StaticResource Dark_SubBackgroundColor}"/>
        <SolidColorBrush x:Key="Dark_SubSubBackgroundBrush" Color="{StaticResource Dark_SubSubBackgroundColor}"/>
        <SolidColorBrush x:Key="Dark_FontBrush" Color="{StaticResource Dark_FontColor}"/>
        <SolidColorBrush x:Key="Dark_HighlightBrush" Color="{StaticResource Dark_HighlightColor}"/>
        <SolidColorBrush x:Key="Dark_BrightHighlightBrush" Color="{StaticResource Dark_BrightHighlightColor}"/>

        <Style x:Key="Dark_ButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=Dark_FontBrush}"/>
            <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_SubBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=Dark_BrightHighlightBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_SubSubBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_HighlightBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Dark_TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource Dark_FontBrush}" />
            
        </Style>

        <!-- Apple style scrollbar styling borrowed and modified from https://sa.ndeep.me/post/apple-style-scrollbar-in-wpf -->
        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="ScrollBarBorder" CornerRadius="5 2 5 2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="ScrollBarBorder" Property="Width" Value="Auto" />
                                <Setter TargetName="ScrollBarBorder" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{StaticResource Dark_HighlightBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{StaticResource ResourceKey=Dark_HighlightBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource ResourceKey=Dark_BrightHighlightBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- end apple style-->
        
        <!--
            when both scrollbars are visible, this annoying square shows up in the corner
            this patches that by using the default scrollviewer template and changing one thing
        -->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <!-- there was a rectangle here, its gone now -->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Slider styling, borrowed modified from https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/slider-styles-and-templates -->
        <Style x:Key="SliderButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Height"
                    Value="14" />
            <Setter Property="Width"
                    Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                                 StrokeThickness="1"
                                 Stroke="{StaticResource Dark_BackGroundBrush}"
                                 Fill="{StaticResource Dark_SubBackgroundBrush}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).Color"
                                                                          Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource Dark_SubSubBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).Color"
                                                                          Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource Dark_HighlightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).Color"
                                                                          Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource Dark_BackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).Color"
                                                                          Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource Dark_SubSubBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template for horizontal sliders-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         SnapsToDevicePixels="True"
                         Placement="Top"
                         Height="4"
                         Visibility="Collapsed"
                         Fill="Blue"/>
                <Border x:Name="TrackBackground"
                        Margin="0"
                        CornerRadius="2"
                        Height="4"
                        Grid.Row="1"
                        BorderThickness="1"
                        Background="{StaticResource Dark_SubBackgroundBrush}"
                        BorderBrush="{StaticResource Dark_BackGroundBrush}"/>
                <Track Grid.Row="1"
                       x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
                         SnapsToDevicePixels="True"
                         Grid.Row="2"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Bottom"
                         Height="4"
                         Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
                         Value="TopLeft">
                    <Setter TargetName="TopTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
                         Value="BottomRight">
                    <Setter TargetName="BottomTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
                         Value="Both">
                    <Setter TargetName="TopTick"
                           Property="Visibility"
                           Value="Visible" />
                    <Setter TargetName="BottomTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="MinWidth"
                            Value="104" />
                    <Setter Property="MinHeight"
                            Value="21" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Dark_ToggleButtonStyle" TargetType="ToggleButton">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource Dark_SubBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark_FontBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=Dark_BrightHighlightBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_SubSubBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_HighlightBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource ResourceKey=Dark_HighlightBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Expander styling, default grabbed and modified from: https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/expander-styles-and-templates -->
        <ControlTemplate x:Key="ExpanderToggleButton"
                         TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
                    CornerRadius="10,0,0,0"
                    BorderThickness="0,0,2,0"
                    Background="{StaticResource Dark_SubBackgroundBrush}"
                    BorderBrush="{StaticResource Dark_HighlightBrush}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).Color">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="{StaticResource Dark_SubSubBackgroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                              Storyboard.TargetProperty="(Panel.Background).Color">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="{StaticResource Dark_HighlightColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).Color">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource Dark_SubBackgroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Border.BorderBrush).Color">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource Dark_SubBackgroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{StaticResource Dark_BrightHighlightColor}" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"
                          Data="M 0 4 L 4 0 L 8 4 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{StaticResource Dark_BrightHighlightColor}" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="CornerRadius" Value="10,0,0,0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="Border" Property="CornerRadius" Value="10,0,0,10"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                                               Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    Grid.Row="0"
                                    BorderThickness="0"
                                    CornerRadius="10,5,5,10"
                                    BorderBrush="{StaticResource Dark_SubBackgroundBrush}"
                                    Background="{StaticResource Dark_SubBackgroundBrush}"
                                    MinHeight="20">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton OverridesDefaultStyle="True"
                                                  Template="{StaticResource ExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                  Background="{StaticResource Dark_SubBackgroundBrush}">
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="1"
                                                      Margin="4"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                                    Grid.Row="1"
                                    BorderThickness="1,0,1,1"
                                    CornerRadius="0,0,2,2">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource Dark_SubBackgroundColor}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource Dark_SubBackgroundColor}" />
                                </Border.Background>
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="True">
                                <Setter TargetName="ContentRow"
                                        Property="Height"
                                        Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Listbox Container styling -->
        <Style x:Key="ListBoxStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="ItemBorder"  BorderThickness="1" CornerRadius="5" Padding="5">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ItemBorder" Value="{StaticResource ResourceKey=Dark_SubSubBackgroundBrush}" Property="Background" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ItemBorder" Value="{StaticResource ResourceKey=Dark_SubSubBackgroundBrush}" Property="Background" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ResourceKey=Dark_HighlightBrush}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
